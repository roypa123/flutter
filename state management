----------------------------------------------------------------------------------------------------------------------

PopupMenuButton(
            onSelected: (FilterOptions selectedValue) {
              setState(() {
                if (selectedValue == FilterOptions.Favorites) {
                  _showOnlyFavorites = true;
                } else {
                  _showOnlyFavorites = false;
                }
              });
            },
            icon: Icon(
              Icons.more_vert,
            ),
            itemBuilder: (_) => [
                  PopupMenuItem(
                    child: Text('Only Favorites'),
                    value: FilterOptions.Favorites,
                  ),
                  PopupMenuItem(
                    child: Text('Show All'),
                    value: FilterOptions.All,
                  ),
                  
     --------------------------------------------------------------------------------------------------------------------------------------------------------------
     Consumer<Product>(
            builder: (ctx, product, _) => IconButton(
                  icon: Icon(
                    product.isFavorite ? Icons.favorite : Icons.favorite_border,
                  ),
                  color: Theme.of(context).accentColor,
                  onPressed: () {
                    product.toggleFavoriteStatus();
                  },
                ),
          ),
     --------------------------------------------------------------------------------------------------------------------------------------------------------------
     MultiProvider(
      providers: [
        ChangeNotifierProvider.value(
          value: Products(),
        ),
        ChangeNotifierProvider.value(
          value: Cart(),
        ),
      ],
     --------------------------------------------------------------------------------------------------------------------------------------------------------------
     Spacer(),
                  Chip(
                    label: Text(
                      '\$${cart.totalAmount}',
                      style: TextStyle(
                        color: Theme.of(context).primaryTextTheme.title.color,
                      ),
                    ),
                    backgroundColor: Theme.of(context).primaryColor,
                  ),
     --------------------------------------------------------------------------------------------------------------------------------------------------------------
     Container(
              padding: EdgeInsets.symmetric(horizontal: 10),
              width: double.infinity,
              child: Text(
                loadedProduct.description,
                textAlign: TextAlign.center,
                softWrap: true,
              ),
     
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
      Dismissible(
      key: ValueKey(id),
      background: Container(
        color: Theme.of(context).errorColor,
        child: Icon(
          Icons.delete,
          color: Colors.white,
          size: 40,
        ),
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
     final loadedProduct = Provider.of<Products>(
      context,
      listen: false,
    ).findById(productId);
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
     List<Product> get items {
    return [..._items];
  }

  Product findById(String id) {
    return _items.firstWhere((prod) => prod.id == id);
  }
     
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
     child: Wrap(
          spacing: 10.0,
          runSpacing: 20.0,
          children: [
            Container(
              color: Colors.blue,
              height: 200,
              width: 200,
            ),
            Container(
              color: Colors.yellow,
              height: 200,
              width: 200,
            ),
            Container(
              color: Colors.blue,
              height: 200,
              width: 200,
            ),
            Container(
              color: Colors.yellow,
              height: 200,
              width: 200,
            ),
            Container(
              color: Colors.blue,
              height: 200,
              width: 200,
            ),
            Container(
              color: Colors.yellow,
              height: 200,
              width: 200,
            ),
          ],
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
     height: min(widget.order.products.length * 20.0 + 10, 100)
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
     
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
     
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
     
     ---------------------------------------------------------------------------------------------------------------------------------------------------------------
